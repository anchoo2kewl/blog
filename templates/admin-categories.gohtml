{{template "modern-header" .}}

<div class="min-h-screen bg-gray-50 dark:bg-slate-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Category Management</h1>
                    <p class="text-gray-600 dark:text-gray-400 mt-1">Manage categories (displayed as tags to users)</p>
                </div>
                <a href="/admin/posts" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700">
                    ‚Üê Back to Posts
                </a>
            </div>
        </div>

        <!-- Success/Error Messages -->
        <div id="message-container" class="mb-6 hidden">
            <div id="success-message" class="hidden p-4 rounded-md bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p id="success-text" class="text-sm text-green-800 dark:text-green-200"></p>
                    </div>
                </div>
            </div>
            <div id="error-message" class="hidden p-4 rounded-md bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L10 10.414l1.293-1.293a1 1 0 111.414 1.414L11.414 12l1.293 1.293a1 1 0 01-1.414 1.414L10 13.414l-1.293 1.293a1 1 0 01-1.414-1.414L9.586 12 8.293 10.707a1 1 0 011.414-1.414L10 9.586l1.293-1.293z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p id="error-text" class="text-sm text-red-800 dark:text-red-200"></p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Create New Category -->
        <div class="bg-white dark:bg-slate-800 shadow rounded-lg mb-8">
            <div class="px-6 py-4 border-b border-gray-200 dark:border-slate-700">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">Create New Category</h3>
            </div>
            <div class="px-6 py-4">
                <form id="create-form" class="flex items-end space-x-4">
                    <div class="flex-1">
                        <label for="create-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Category Name</label>
                        <input type="text" 
                               id="create-name" 
                               name="name" 
                               required
                               placeholder="e.g., Performance, Architecture, AI"
                               class="mt-1 block w-full border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 dark:bg-slate-700 dark:text-white sm:text-sm">
                    </div>
                    <button type="submit" id="create-btn" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50">
                        <svg id="create-spinner" class="hidden animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        <svg id="create-icon" class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
                        </svg>
                        <span id="create-text">Create Category</span>
                    </button>
                </form>
            </div>
        </div>

        <!-- Categories List -->
        <div class="bg-white dark:bg-slate-800 shadow rounded-lg">
            <div class="px-6 py-4 border-b border-gray-200 dark:border-slate-700">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">Existing Categories</h3>
                <div id="loading-indicator" class="hidden mt-2">
                    <div class="animate-spin inline-block w-4 h-4 border-[2px] border-current border-t-transparent text-blue-600 rounded-full"></div>
                    <span class="ml-2 text-sm text-gray-600 dark:text-gray-400">Loading...</span>
                </div>
            </div>
            <div class="overflow-hidden">
                <div id="categories-container">
                    {{if .Categories}}
                    <table id="categories-table" class="min-w-full divide-y divide-gray-200 dark:divide-slate-700">
                        <thead class="bg-gray-50 dark:bg-slate-700">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                    Category
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                    Posts Count
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                    Created
                                </th>
                                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody id="categories-tbody" class="bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-slate-700">
                            {{range .Categories}}
                            <tr id="category-row-{{.ID}}">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-8 w-8">
                                            <div class="h-8 w-8 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center">
                                                <svg class="w-4 h-4 text-indigo-600 dark:text-indigo-400" fill="currentColor" viewBox="0 0 20 20">
                                                    <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd"/>
                                                </svg>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900 dark:text-white" id="category-name-{{.ID}}">
                                                {{.Name}}
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                                    <span id="category-count-{{.ID}}" class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{if index $.PostCounts .ID}}{{if gt (index $.PostCounts .ID) 0}}bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200{{else}}bg-gray-100 dark:bg-slate-700 text-gray-800 dark:text-gray-200{{end}}{{else}}bg-gray-100 dark:bg-slate-700 text-gray-800 dark:text-gray-200{{end}}">
                                        {{if index $.PostCounts .ID}}{{index $.PostCounts .ID}}{{else}}0{{end}} posts
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                                    {{.CreatedAt.Format "Jan 2, 2006"}}
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex items-center justify-end space-x-2">
                                        <!-- Edit Button -->
                                        <button onclick="editCategory({{.ID}}, '{{.Name}}')"
                                                class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                            </svg>
                                        </button>
                                        <!-- Delete Button -->
                                        <button onclick="deleteCategory({{.ID}}, '{{.Name}}')"
                                                id="delete-btn-{{.ID}}"
                                                class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 ml-2"
                                                {{if index $.PostCounts .ID}}{{if gt (index $.PostCounts .ID) 0}}disabled title="Cannot delete category with posts"{{end}}{{end}}>
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                            </svg>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            {{end}}
                        </tbody>
                    </table>
                    {{else}}
                    <div id="empty-state" class="px-6 py-8 text-center">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 48 48">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a1.994 1.994 0 01-1.414.586H7m0-16v16m0-16h8m-8 16h8"/>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No categories</h3>
                        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating your first category.</p>
                    </div>
                    {{end}}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div id="edit-modal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 flex items-center justify-center hidden">
    <div class="bg-white dark:bg-slate-800 rounded-3xl p-8 max-w-md w-full mx-4 shadow-2xl border border-gray-200/50 dark:border-slate-700/50">
        <div class="flex items-center space-x-4 mb-6">
            <div class="w-12 h-12 bg-blue-100 dark:bg-blue-800 rounded-2xl flex items-center justify-center">
                <svg class="w-6 h-6 text-blue-600 dark:text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"/>
                </svg>
            </div>
            <div>
                <h3 class="text-lg font-bold text-gray-900 dark:text-white">Edit Category</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Update the category name</p>
            </div>
        </div>
        
        <form id="edit-form" class="space-y-4">
            <div>
                <label for="edit-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Category Name</label>
                <input type="text" 
                       id="edit-name" 
                       name="name" 
                       required
                       class="mt-1 block w-full border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-slate-700 dark:text-white sm:text-sm">
            </div>
            
            <div class="flex justify-end space-x-3 pt-4">
                <button type="button" 
                        onclick="closeEditModal()" 
                        class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md hover:bg-gray-50 dark:hover:bg-slate-600">
                    Cancel
                </button>
                <button type="submit" 
                        id="update-btn"
                        class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md disabled:opacity-50">
                    <svg id="update-spinner" class="hidden animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    <span id="update-text">Update Category</span>
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="delete-modal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 flex items-center justify-center hidden">
    <div class="bg-white dark:bg-slate-800 rounded-3xl p-8 max-w-md w-full mx-4 shadow-2xl border border-gray-200/50 dark:border-slate-700/50">
        <div class="flex items-center space-x-4 mb-6">
            <div class="w-12 h-12 bg-red-100 dark:bg-red-800 rounded-2xl flex items-center justify-center">
                <svg class="w-6 h-6 text-red-600 dark:text-red-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" clip-rule="evenodd"/>
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                </svg>
            </div>
            <div>
                <h3 class="text-lg font-bold text-gray-900 dark:text-white">Delete Category</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">This action cannot be undone</p>
            </div>
        </div>
        
        <p id="delete-message" class="text-sm text-gray-600 dark:text-gray-400 mb-6"></p>
        
        <div class="flex justify-end space-x-3">
            <button type="button" 
                    onclick="closeDeleteModal()" 
                    class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-slate-700 border border-gray-300 dark:border-slate-600 rounded-md hover:bg-gray-50 dark:hover:bg-slate-600">
                Cancel
            </button>
            <button id="confirm-delete-btn" onclick="confirmDelete()"
                    class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-md disabled:opacity-50">
                <svg id="delete-spinner" class="hidden animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                <span id="delete-text">Delete Category</span>
            </button>
        </div>
    </div>
</div>

<script>
// Global variables
let currentEditingId = null;
let currentDeletingId = null;

// Utility functions
function showMessage(message, type = 'success') {
    const container = document.getElementById('message-container');
    const successDiv = document.getElementById('success-message');
    const errorDiv = document.getElementById('error-message');
    
    // Hide all messages first
    successDiv.classList.add('hidden');
    errorDiv.classList.add('hidden');
    
    if (type === 'success') {
        document.getElementById('success-text').textContent = message;
        successDiv.classList.remove('hidden');
    } else {
        document.getElementById('error-text').textContent = message;
        errorDiv.classList.remove('hidden');
    }
    
    container.classList.remove('hidden');
    
    // Auto-hide after 5 seconds
    setTimeout(() => {
        container.classList.add('hidden');
    }, 5000);
}

function setButtonLoading(btnId, spinnerId, textId, loading, originalText) {
    const btn = document.getElementById(btnId);
    const spinner = document.getElementById(spinnerId);
    const text = document.getElementById(textId);
    
    if (loading) {
        btn.disabled = true;
        spinner.classList.remove('hidden');
        text.textContent = 'Processing...';
    } else {
        btn.disabled = false;
        spinner.classList.add('hidden');
        text.textContent = originalText;
    }
}

// Create category functionality
document.getElementById('create-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const nameInput = document.getElementById('create-name');
    const name = nameInput.value.trim();
    
    if (!name) {
        showMessage('Category name is required', 'error');
        return;
    }
    
    setButtonLoading('create-btn', 'create-spinner', 'create-text', true, 'Create Category');
    
    try {
        const response = await fetch('/api/categories', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer secretToken' // TODO: Get from session
            },
            body: JSON.stringify({ name: name })
        });
        
        if (response.ok) {
            const category = await response.json();
            showMessage(`Category "${name}" created successfully!`, 'success');
            nameInput.value = '';
            addCategoryToTable(category);
        } else {
            const error = await response.text();
            showMessage(`Failed to create category: ${error}`, 'error');
        }
    } catch (error) {
        showMessage(`Error: ${error.message}`, 'error');
    } finally {
        setButtonLoading('create-btn', 'create-spinner', 'create-text', false, 'Create Category');
    }
});

// Edit category functionality
function editCategory(id, name) {
    currentEditingId = id;
    const modal = document.getElementById('edit-modal');
    const nameInput = document.getElementById('edit-name');
    
    nameInput.value = name;
    modal.classList.remove('hidden');
    nameInput.focus();
}

document.getElementById('edit-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    if (!currentEditingId) return;
    
    const nameInput = document.getElementById('edit-name');
    const name = nameInput.value.trim();
    
    if (!name) {
        showMessage('Category name is required', 'error');
        return;
    }
    
    setButtonLoading('update-btn', 'update-spinner', 'update-text', true, 'Update Category');
    
    try {
        const response = await fetch(`/api/categories/${currentEditingId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer secretToken' // TODO: Get from session
            },
            body: JSON.stringify({ name: name })
        });
        
        if (response.ok) {
            const category = await response.json();
            showMessage(`Category updated successfully!`, 'success');
            updateCategoryInTable(currentEditingId, category.name);
            closeEditModal();
        } else {
            const error = await response.text();
            showMessage(`Failed to update category: ${error}`, 'error');
        }
    } catch (error) {
        showMessage(`Error: ${error.message}`, 'error');
    } finally {
        setButtonLoading('update-btn', 'update-spinner', 'update-text', false, 'Update Category');
    }
});

function closeEditModal() {
    document.getElementById('edit-modal').classList.add('hidden');
    currentEditingId = null;
}

// Delete category functionality
function deleteCategory(id, name) {
    currentDeletingId = id;
    const modal = document.getElementById('delete-modal');
    const message = document.getElementById('delete-message');
    
    message.textContent = `Are you sure you want to delete the category "${name}"?`;
    modal.classList.remove('hidden');
}

async function confirmDelete() {
    if (!currentDeletingId) return;
    
    setButtonLoading('confirm-delete-btn', 'delete-spinner', 'delete-text', true, 'Delete Category');
    
    try {
        const response = await fetch(`/api/categories/${currentDeletingId}`, {
            method: 'DELETE',
            headers: {
                'Authorization': 'Bearer secretToken' // TODO: Get from session
            }
        });
        
        if (response.ok) {
            showMessage('Category deleted successfully!', 'success');
            removeCategoryFromTable(currentDeletingId);
            closeDeleteModal();
        } else {
            const error = await response.text();
            showMessage(`Failed to delete category: ${error}`, 'error');
        }
    } catch (error) {
        showMessage(`Error: ${error.message}`, 'error');
    } finally {
        setButtonLoading('confirm-delete-btn', 'delete-spinner', 'delete-text', false, 'Delete Category');
    }
}

function closeDeleteModal() {
    document.getElementById('delete-modal').classList.add('hidden');
    currentDeletingId = null;
}

// Table manipulation functions
function addCategoryToTable(category) {
    const tbody = document.getElementById('categories-tbody');
    
    // Remove empty state if it exists
    const emptyState = document.getElementById('empty-state');
    if (emptyState) {
        emptyState.remove();
        // Create table structure if it doesn't exist
        const container = document.getElementById('categories-container');
        container.innerHTML = `
            <table id="categories-table" class="min-w-full divide-y divide-gray-200 dark:divide-slate-700">
                <thead class="bg-gray-50 dark:bg-slate-700">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Category</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Posts Count</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Created</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody id="categories-tbody" class="bg-white dark:bg-slate-800 divide-y divide-gray-200 dark:divide-slate-700"></tbody>
            </table>
        `;
    }
    
    const tbody2 = document.getElementById('categories-tbody');
    const createdDate = new Date(category.created_at).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
    
    const row = document.createElement('tr');
    row.id = `category-row-${category.id}`;
    row.innerHTML = `
        <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
                <div class="flex-shrink-0 h-8 w-8">
                    <div class="h-8 w-8 rounded-full bg-indigo-100 dark:bg-indigo-900 flex items-center justify-center">
                        <svg class="w-4 h-4 text-indigo-600 dark:text-indigo-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <div class="text-sm font-medium text-gray-900 dark:text-white" id="category-name-${category.id}">
                        ${category.name}
                    </div>
                </div>
            </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
            <span id="category-count-${category.id}" class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-slate-700 text-gray-800 dark:text-gray-200">
                0 posts
            </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
            ${createdDate}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
            <div class="flex items-center justify-end space-x-2">
                <button onclick="editCategory(${category.id}, '${category.name}')"
                        class="text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                    </svg>
                </button>
                <button onclick="deleteCategory(${category.id}, '${category.name}')"
                        id="delete-btn-${category.id}"
                        class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300 ml-2">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                    </svg>
                </button>
            </div>
        </td>
    `;
    
    tbody2.appendChild(row);
}

function updateCategoryInTable(id, newName) {
    const nameElement = document.getElementById(`category-name-${id}`);
    if (nameElement) {
        nameElement.textContent = newName;
    }
}

function removeCategoryFromTable(id) {
    const row = document.getElementById(`category-row-${id}`);
    if (row) {
        row.remove();
    }
    
    // Check if table is empty and show empty state
    const tbody = document.getElementById('categories-tbody');
    if (tbody && tbody.children.length === 0) {
        const container = document.getElementById('categories-container');
        container.innerHTML = `
            <div id="empty-state" class="px-6 py-8 text-center">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 48 48">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a1.994 1.994 0 01-1.414.586H7m0-16v16m0-16h8m-8 16h8"/>
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No categories</h3>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating your first category.</p>
            </div>
        `;
    }
}

// Keyboard shortcuts and modal interactions
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeEditModal();
        closeDeleteModal();
    }
});

document.getElementById('edit-modal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeEditModal();
    }
});

document.getElementById('delete-modal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeDeleteModal();
    }
});
</script>

{{template "modern-footer" .}}