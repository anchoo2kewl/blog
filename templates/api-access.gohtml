{{template "modern-header" .}}

<div class="api-access-page min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-slate-950 dark:via-slate-900 dark:to-slate-800">
    <div class="container mx-auto px-6 py-12">
        <!-- Hero Section -->
        <div class="text-center mb-16">
            <div class="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl mb-6 shadow-xl shadow-blue-500/25">
                <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"/>
                </svg>
            </div>
            <h1 class="text-5xl font-bold text-gray-900 dark:text-white mb-4 bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                API Access Management
            </h1>
            <p class="text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
                Create and manage secure API tokens for programmatic access to your blog data
            </p>
        </div>

        {{if .Message}}
        <div class="max-w-4xl mx-auto mb-8">
            <div class="{{if contains .Message "success"}}bg-emerald-50 border-emerald-200 text-emerald-800 dark:bg-emerald-900/10 dark:border-emerald-800 dark:text-emerald-400{{else}}bg-red-50 border-red-200 text-red-800 dark:bg-red-900/10 dark:border-red-800 dark:text-red-400{{end}} border rounded-2xl p-6 backdrop-blur-sm shadow-lg">
                <div class="flex items-start space-x-4">
                    <div class="flex-shrink-0">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                            {{if contains .Message "success"}}
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            {{else}}
                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            {{end}}
                        </svg>
                    </div>
                    <div class="flex-1">
                        <p class="font-medium">{{.Message}}</p>
                        {{$newToken := .Request.URL.Query.Get "new_token"}}
                        {{if $newToken}}
                        <div class="mt-4 p-4 bg-gray-900 dark:bg-gray-800 rounded-xl border">
                            <p class="text-sm font-medium text-gray-200 mb-2">Your new API token (copy it now, it won't be shown again):</p>
                            <div class="flex items-center space-x-3">
                                <code class="flex-1 px-3 py-2 bg-gray-800 dark:bg-gray-700 text-green-400 rounded-lg font-mono text-sm break-all">{{$newToken}}</code>
                                <button onclick="copyToClipboard('{{$newToken}}')" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-sm transition-colors duration-200">Copy</button>
                            </div>
                        </div>
                        {{end}}
                    </div>
                </div>
            </div>
        </div>
        {{end}}

        <!-- Main Content Grid -->
        <div class="max-w-7xl mx-auto grid lg:grid-cols-3 gap-8">
            <!-- Left Column: Permissions & Create Token -->
            <div class="lg:col-span-1 space-y-8">
                <!-- Permissions Card -->
                <div class="bg-white/90 dark:bg-slate-800/70 backdrop-blur-xl rounded-3xl p-8 shadow-xl border border-gray-200/50 dark:border-slate-700/50">
                    <div class="flex items-center space-x-3 mb-6">
                        <div class="w-10 h-10 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-xl flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <div>
                            <h2 class="text-xl font-bold text-gray-900 dark:text-white">Your Permissions</h2>
                            <p class="text-sm text-gray-600 dark:text-gray-400">What you can do with API tokens</p>
                        </div>
                    </div>
                    
                    <div class="space-y-3">
                        {{if .UserPermissions.CanComment}}
                        <div class="flex items-center space-x-3 p-3 bg-emerald-50 dark:bg-emerald-900/20 rounded-xl border border-emerald-200/50 dark:border-emerald-800/50">
                            <div class="w-8 h-8 bg-emerald-100 dark:bg-emerald-800 rounded-lg flex items-center justify-center">
                                <svg class="w-4 h-4 text-emerald-600 dark:text-emerald-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <span class="font-medium text-gray-900 dark:text-white">Comment on posts</span>
                        </div>
                        {{end}}
                        {{if .UserPermissions.CanViewUnpublished}}
                        <div class="flex items-center space-x-3 p-3 bg-emerald-50 dark:bg-emerald-900/20 rounded-xl border border-emerald-200/50 dark:border-emerald-800/50">
                            <div class="w-8 h-8 bg-emerald-100 dark:bg-emerald-800 rounded-lg flex items-center justify-center">
                                <svg class="w-4 h-4 text-emerald-600 dark:text-emerald-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <span class="font-medium text-gray-900 dark:text-white">View unpublished posts</span>
                        </div>
                        {{end}}
                        {{if .UserPermissions.CanEditPosts}}
                        <div class="flex items-center space-x-3 p-3 bg-emerald-50 dark:bg-emerald-900/20 rounded-xl border border-emerald-200/50 dark:border-emerald-800/50">
                            <div class="w-8 h-8 bg-emerald-100 dark:bg-emerald-800 rounded-lg flex items-center justify-center">
                                <svg class="w-4 h-4 text-emerald-600 dark:text-emerald-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <span class="font-medium text-gray-900 dark:text-white">Create and edit posts</span>
                        </div>
                        {{end}}
                        {{if .UserPermissions.CanManageUsers}}
                        <div class="flex items-center space-x-3 p-3 bg-emerald-50 dark:bg-emerald-900/20 rounded-xl border border-emerald-200/50 dark:border-emerald-800/50">
                            <div class="w-8 h-8 bg-emerald-100 dark:bg-emerald-800 rounded-lg flex items-center justify-center">
                                <svg class="w-4 h-4 text-emerald-600 dark:text-emerald-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <span class="font-medium text-gray-900 dark:text-white">Manage users</span>
                        </div>
                        {{end}}
                    </div>
                </div>

                <!-- Create New Token Card -->
                <div class="bg-white/90 dark:bg-slate-800/70 backdrop-blur-xl rounded-3xl p-8 shadow-xl border border-gray-200/50 dark:border-slate-700/50">
                    <div class="flex items-center space-x-3 mb-6">
                        <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <div>
                            <h2 class="text-xl font-bold text-gray-900 dark:text-white">Create New Token</h2>
                            <p class="text-sm text-gray-600 dark:text-gray-400">Generate a new token for API access</p>
                        </div>
                    </div>
                    
                    <form id="create-token-form" class="space-y-6">
                        <div>
                            <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Token Name</label>
                            <input type="text" 
                                   id="name" 
                                   name="name" 
                                   required 
                                   placeholder="e.g., My Blog Script, Mobile App, etc."
                                   class="w-full px-4 py-3 bg-gray-50 dark:bg-slate-900/50 border border-gray-300 dark:border-slate-600 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors duration-200 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400">
                            <p class="text-xs text-gray-500 dark:text-gray-400 mt-2">Choose a descriptive name to help you identify this token later.</p>
                        </div>
                        
                        <button type="submit" id="create-token-btn" class="w-full flex items-center justify-center space-x-2 px-6 py-4 bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 disabled:from-gray-400 disabled:to-gray-500 disabled:cursor-not-allowed text-white rounded-xl font-medium shadow-lg shadow-blue-500/25 hover:shadow-blue-600/30 transition-all duration-300 transform hover:scale-105 disabled:transform-none">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
                            </svg>
                            <span id="create-token-text">Create Token</span>
                        </button>
                    </form>
                    
                    <!-- Success/Error Messages for AJAX -->
                    <div id="ajax-message" class="hidden">
                        <div id="ajax-message-content" class="p-4 rounded-xl border">
                            <div class="flex items-start space-x-4">
                                <div class="flex-shrink-0">
                                    <svg id="ajax-message-icon" class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                                    </svg>
                                </div>
                                <div class="flex-1">
                                    <p id="ajax-message-text" class="font-medium"></p>
                                    <div id="new-token-display" class="hidden mt-4 p-4 bg-gray-900 dark:bg-gray-800 rounded-xl border">
                                        <p class="text-sm font-medium text-gray-200 mb-2">Your new API token (copy it now, it won't be shown again). This message will auto-hide in 30 seconds:</p>
                                        <div class="flex items-center space-x-3">
                                            <code id="new-token-value" class="flex-1 px-3 py-2 bg-gray-800 dark:bg-gray-700 text-green-400 rounded-lg font-mono text-sm break-all"></code>
                                            <button id="copy-new-token-btn" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium text-sm transition-colors duration-200">Copy</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="flex-shrink-0">
                                    <button id="dismiss-message-btn" onclick="dismissMessage()" class="p-2 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors duration-200">
                                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Confirmation Modal -->
            <div id="confirmation-modal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 flex items-center justify-center hidden">
                <div class="bg-white dark:bg-slate-800 rounded-3xl p-8 max-w-md w-full mx-4 shadow-2xl border border-gray-200/50 dark:border-slate-700/50">
                    <div class="flex items-center space-x-4 mb-6">
                        <div id="modal-icon" class="w-12 h-12 rounded-2xl flex items-center justify-center">
                            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" clip-rule="evenodd"/>
                                <path fill-rule="evenodd" d="M4 5a2 2 0 012-2h8a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h6a1 1 0 100-2H7z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <div>
                            <h3 id="modal-title" class="text-xl font-bold text-gray-900 dark:text-white">Confirm Action</h3>
                            <p class="text-sm text-gray-600 dark:text-gray-400">This action cannot be undone</p>
                        </div>
                    </div>
                    
                    <div class="mb-8">
                        <p id="modal-message" class="text-gray-700 dark:text-gray-300 leading-relaxed">
                            Are you sure you want to perform this action?
                        </p>
                        <div id="token-info" class="hidden mt-4 p-4 bg-gray-50 dark:bg-slate-900/50 rounded-xl border border-gray-200 dark:border-slate-600">
                            <div class="flex items-center space-x-3">
                                <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center">
                                    <svg class="w-4 h-4 text-blue-600 dark:text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z" clip-rule="evenodd"/>
                                    </svg>
                                </div>
                                <div>
                                    <p class="font-medium text-gray-900 dark:text-white" id="token-name">Token Name</p>
                                    <p class="text-sm text-gray-600 dark:text-gray-400">API Token</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="flex flex-col sm:flex-row gap-3">
                        <button id="modal-cancel-btn" 
                                class="flex-1 px-6 py-3 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-slate-700 hover:bg-gray-200 dark:hover:bg-slate-600 rounded-xl font-medium transition-colors duration-200 border border-gray-200 dark:border-slate-600">
                            Cancel
                        </button>
                        <button id="modal-confirm-btn" 
                                class="flex-1 px-6 py-3 text-white rounded-xl font-medium transition-all duration-200 transform hover:scale-105 disabled:transform-none disabled:opacity-50 disabled:cursor-not-allowed">
                            <span id="modal-confirm-text">Confirm</span>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Right Column: Tokens & Documentation -->
            <div class="lg:col-span-2 space-y-8">
                <!-- Your API Tokens Card -->
                <div class="bg-white/90 dark:bg-slate-800/70 backdrop-blur-xl rounded-3xl p-8 shadow-xl border border-gray-200/50 dark:border-slate-700/50">
                    <div class="flex items-center space-x-3 mb-8">
                        <div class="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-600 rounded-xl flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <div>
                            <h2 class="text-xl font-bold text-gray-900 dark:text-white">Your API Tokens</h2>
                            <p class="text-sm text-gray-600 dark:text-gray-400">Manage your existing API tokens</p>
                        </div>
                    </div>
                    
                    {{if .Tokens}}
                    <div class="space-y-4">
                        {{range .Tokens}}
                        <div class="group relative p-6 rounded-2xl border transition-all duration-300 {{if not .IsActive}}bg-gray-50 dark:bg-slate-900/50 border-gray-200 dark:border-slate-700 opacity-75{{else}}bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-slate-800 dark:to-slate-700 border-blue-200/50 dark:border-slate-600 hover:from-blue-100 hover:to-indigo-100 dark:hover:from-slate-700 dark:hover:to-slate-600{{end}}">
                            <div class="flex items-start justify-between">
                                <div class="flex-1 min-w-0">
                                    <div class="flex items-center space-x-3 mb-3">
                                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white truncate">{{.Name}}</h3>
                                        <div class="flex-shrink-0">
                                            {{if .IsActive}}
                                            <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-400 border border-emerald-200 dark:border-emerald-800">
                                                <div class="w-1.5 h-1.5 bg-emerald-500 rounded-full mr-2"></div>
                                                Active
                                            </span>
                                            {{else}}
                                            <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-400 border border-red-200 dark:border-red-800">
                                                <div class="w-1.5 h-1.5 bg-red-500 rounded-full mr-2"></div>
                                                Revoked
                                            </span>
                                            {{end}}
                                        </div>
                                    </div>
                                    
                                    <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-4">
                                        <div class="flex items-center space-x-2">
                                            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                                            </svg>
                                            <span>Created {{.CreatedAt}}</span>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                                            </svg>
                                            <span>{{if .LastUsedAt}}Last used {{.LastUsedAt}}{{else}}Never used{{end}}</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="flex flex-col sm:flex-row gap-2 ml-4">
                                    {{if .IsActive}}
                                    <button onclick="revokeToken({{.ID}}, '{{.Name}}')" 
                                            class="px-3 py-2 text-xs font-medium text-amber-700 dark:text-amber-400 bg-amber-100 dark:bg-amber-900/30 hover:bg-amber-200 dark:hover:bg-amber-900/50 rounded-lg border border-amber-200 dark:border-amber-800 transition-colors duration-200">
                                        Revoke
                                    </button>
                                    {{end}}
                                    <button onclick="deleteToken({{.ID}}, '{{.Name}}')" 
                                            class="px-3 py-2 text-xs font-medium text-red-700 dark:text-red-400 bg-red-100 dark:bg-red-900/30 hover:bg-red-200 dark:hover:bg-red-900/50 rounded-lg border border-red-200 dark:border-red-800 transition-colors duration-200">
                                        Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                        {{end}}
                    </div>
                    {{else}}
                    <div class="text-center py-16">
                        <div class="inline-flex items-center justify-center w-16 h-16 bg-gray-100 dark:bg-slate-800 rounded-2xl mb-6">
                            <svg class="w-8 h-8 text-gray-400 dark:text-gray-500" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M18 8a6 6 0 01-7.743 5.743L10 14l-1 1-1 1H6v2H2v-4l4.257-4.257A6 6 0 1118 8zm-6-4a1 1 0 100 2 2 2 0 012 2 1 1 0 102 0 4 4 0 00-4-4z" clip-rule="evenodd"/>
                            </svg>
                        </div>
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">No API tokens yet</h3>
                        <p class="text-gray-600 dark:text-gray-400 max-w-sm mx-auto">Create your first API token to start using the API programmatically.</p>
                    </div>
                    {{end}}
                </div>

                <!-- API Documentation Card -->
                <div class="bg-white/90 dark:bg-slate-800/70 backdrop-blur-xl rounded-3xl p-8 shadow-xl border border-gray-200/50 dark:border-slate-700/50">
                    <div class="flex items-center space-x-3 mb-8">
                        <div class="w-10 h-10 bg-gradient-to-br from-orange-500 to-red-600 rounded-xl flex items-center justify-center">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                            </svg>
                        </div>
                        <div>
                            <h2 class="text-xl font-bold text-gray-900 dark:text-white">API Documentation</h2>
                            <p class="text-sm text-gray-600 dark:text-gray-400">How to use your API tokens</p>
                        </div>
                    </div>
                    
                    <div class="space-y-8">
                        <!-- Authentication Section -->
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center space-x-2">
                                <svg class="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                                </svg>
                                <span>Authentication</span>
                            </h3>
                            <p class="text-gray-600 dark:text-gray-400 mb-4">Include your API token in the Authorization header:</p>
                            <div class="relative group">
                                <pre class="bg-gray-900 dark:bg-slate-900 text-gray-100 p-4 rounded-xl font-mono text-sm overflow-x-auto border border-gray-200 dark:border-slate-700"><code>Authorization: Bearer YOUR_TOKEN_HERE</code></pre>
                                <div class="absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
                            </div>
                        </div>
                        
                        <!-- Endpoints Section -->
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center space-x-2">
                                <svg class="w-5 h-5 text-indigo-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                                </svg>
                                <span>Available Endpoints</span>
                            </h3>
                            
                            <div class="grid gap-4">
                                <!-- GET /api/posts -->
                                <div class="p-4 rounded-xl border border-green-200 dark:border-green-800/50 bg-green-50 dark:bg-green-900/10">
                                    <div class="flex items-center justify-between mb-2">
                                        <div class="flex items-center space-x-3">
                                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-200">GET</span>
                                            <code class="font-mono text-sm text-gray-900 dark:text-gray-100">/api/posts</code>
                                        </div>
                                    </div>
                                    <p class="text-sm text-gray-600 dark:text-gray-400">List all posts</p>
                                </div>
                                
                                <!-- POST /api/posts -->
                                <div class="p-4 rounded-xl border border-blue-200 dark:border-blue-800/50 bg-blue-50 dark:bg-blue-900/10">
                                    <div class="flex items-center justify-between mb-2">
                                        <div class="flex items-center space-x-3">
                                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200">POST</span>
                                            <code class="font-mono text-sm text-gray-900 dark:text-gray-100">/api/posts</code>
                                        </div>
                                        {{if not .UserPermissions.CanEditPosts}}
                                        <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-red-100 dark:bg-red-800/50 text-red-800 dark:text-red-400">
                                            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                                            </svg>
                                            Editor/Admin Required
                                        </span>
                                        {{end}}
                                    </div>
                                    <p class="text-sm text-gray-600 dark:text-gray-400">Create a new post</p>
                                </div>
                                
                                <!-- GET /api/users -->
                                <div class="p-4 rounded-xl border border-purple-200 dark:border-purple-800/50 bg-purple-50 dark:bg-purple-900/10">
                                    <div class="flex items-center justify-between mb-2">
                                        <div class="flex items-center space-x-3">
                                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-200">GET</span>
                                            <code class="font-mono text-sm text-gray-900 dark:text-gray-100">/api/users</code>
                                        </div>
                                        {{if not .UserPermissions.CanManageUsers}}
                                        <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-red-100 dark:bg-red-800/50 text-red-800 dark:text-red-400">
                                            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                                            </svg>
                                            Admin Required
                                        </span>
                                        {{end}}
                                    </div>
                                    <p class="text-sm text-gray-600 dark:text-gray-400">List users</p>
                                </div>
                                
                                <!-- POST /api/users -->
                                <div class="p-4 rounded-xl border border-orange-200 dark:border-orange-800/50 bg-orange-50 dark:bg-orange-900/10">
                                    <div class="flex items-center justify-between mb-2">
                                        <div class="flex items-center space-x-3">
                                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200">POST</span>
                                            <code class="font-mono text-sm text-gray-900 dark:text-gray-100">/api/users</code>
                                        </div>
                                        {{if not .UserPermissions.CanManageUsers}}
                                        <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-red-100 dark:bg-red-800/50 text-red-800 dark:text-red-400">
                                            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
                                            </svg>
                                            Admin Required
                                        </span>
                                        {{end}}
                                    </div>
                                    <p class="text-sm text-gray-600 dark:text-gray-400">Create a user</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
        const btn = event.target;
        const originalText = btn.textContent;
        btn.textContent = 'Copied!';
        btn.classList.add('bg-emerald-600', 'hover:bg-emerald-700');
        btn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
        setTimeout(() => {
            btn.textContent = originalText;
            btn.classList.remove('bg-emerald-600', 'hover:bg-emerald-700');
            btn.classList.add('bg-blue-600', 'hover:bg-blue-700');
        }, 2000);
    }).catch(function(err) {
        const textArea = document.createElement('textarea');
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        
        const btn = event.target;
        const originalText = btn.textContent;
        btn.textContent = 'Copied!';
        setTimeout(() => btn.textContent = originalText, 2000);
    });
}

function showMessage(message, isSuccess, token = null) {
    const messageDiv = document.getElementById('ajax-message');
    const messageContent = document.getElementById('ajax-message-content');
    const messageIcon = document.getElementById('ajax-message-icon');
    const messageText = document.getElementById('ajax-message-text');
    const newTokenDisplay = document.getElementById('new-token-display');
    const newTokenValue = document.getElementById('new-token-value');
    const copyBtn = document.getElementById('copy-new-token-btn');

    // Update message content
    messageText.textContent = message;

    // Update styling based on success/error
    if (isSuccess) {
        messageContent.className = 'p-4 rounded-xl border bg-emerald-50 border-emerald-200 text-emerald-800 dark:bg-emerald-900/10 dark:border-emerald-800 dark:text-emerald-400';
        messageIcon.innerHTML = '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>';
    } else {
        messageContent.className = 'p-4 rounded-xl border bg-red-50 border-red-200 text-red-800 dark:bg-red-900/10 dark:border-red-800 dark:text-red-400';
        messageIcon.innerHTML = '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>';
    }

    // Show token if provided
    if (token && isSuccess) {
        newTokenValue.textContent = token;
        newTokenDisplay.classList.remove('hidden');
        copyBtn.onclick = () => copyToClipboard(token);
    } else {
        newTokenDisplay.classList.add('hidden');
    }

    // Show message
    messageDiv.classList.remove('hidden');

    // Auto-hide after 5 seconds
    setTimeout(() => {
        messageDiv.classList.add('hidden');
        newTokenDisplay.classList.add('hidden');
    }, 30000);
}

function reloadTokenList() {
    // Reload the page to refresh the token list - could be improved with AJAX
    setTimeout(() => {
        window.location.reload();
    }, 2000);
}

function dismissMessage() {
    const messageDiv = document.getElementById('ajax-message');
    const newTokenDisplay = document.getElementById('new-token-display');
    messageDiv.classList.add('hidden');
    newTokenDisplay.classList.add('hidden');
}

// Create token form handler
document.getElementById('create-token-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const btn = document.getElementById('create-token-btn');
    const btnText = document.getElementById('create-token-text');
    const nameInput = document.getElementById('name');
    
    // Disable button and show loading
    btn.disabled = true;
    btnText.textContent = 'Creating...';
    
    const formData = new FormData();
    formData.append('name', nameInput.value);
    
    fetch('/api/users/api-tokens', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showMessage(data.message, true, data.token.token);
            nameInput.value = '';
            reloadTokenList();
        } else {
            showMessage(data.error || 'Failed to create token', false);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showMessage('Network error occurred', false);
    })
    .finally(() => {
        btn.disabled = false;
        btnText.textContent = 'Create Token';
    });
});

// Confirmation Modal Functions
function showConfirmationModal(title, message, actionType, tokenName, onConfirm) {
    const modal = document.getElementById('confirmation-modal');
    const modalTitle = document.getElementById('modal-title');
    const modalMessage = document.getElementById('modal-message');
    const modalIcon = document.getElementById('modal-icon');
    const tokenInfo = document.getElementById('token-info');
    const tokenNameEl = document.getElementById('token-name');
    const confirmBtn = document.getElementById('modal-confirm-btn');
    const confirmText = document.getElementById('modal-confirm-text');
    const cancelBtn = document.getElementById('modal-cancel-btn');

    // Set modal content
    modalTitle.textContent = title;
    modalMessage.textContent = message;
    tokenNameEl.textContent = tokenName;
    tokenInfo.classList.remove('hidden');

    // Style the modal based on action type
    if (actionType === 'delete') {
        modalIcon.className = 'w-12 h-12 rounded-2xl flex items-center justify-center bg-red-100 dark:bg-red-900/30 text-red-600 dark:text-red-400';
        modalIcon.innerHTML = `
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" clip-rule="evenodd"/>
                <path fill-rule="evenodd" d="M4 5a2 2 0 012-2h8a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h6a1 1 0 100-2H7z" clip-rule="evenodd"/>
            </svg>
        `;
        confirmBtn.className = 'flex-1 px-6 py-3 text-white bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 rounded-xl font-medium transition-all duration-200 transform hover:scale-105 disabled:transform-none disabled:opacity-50 disabled:cursor-not-allowed';
        confirmText.textContent = 'Delete Token';
    } else if (actionType === 'revoke') {
        modalIcon.className = 'w-12 h-12 rounded-2xl flex items-center justify-center bg-amber-100 dark:bg-amber-900/30 text-amber-600 dark:text-amber-400';
        modalIcon.innerHTML = `
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"/>
            </svg>
        `;
        confirmBtn.className = 'flex-1 px-6 py-3 text-white bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 rounded-xl font-medium transition-all duration-200 transform hover:scale-105 disabled:transform-none disabled:opacity-50 disabled:cursor-not-allowed';
        confirmText.textContent = 'Revoke Token';
    }

    // Show modal with animation
    modal.classList.remove('hidden');
    setTimeout(() => {
        modal.querySelector('div').classList.add('animate-pulse');
    }, 10);

    // Handle confirm button
    const handleConfirm = () => {
        confirmBtn.disabled = true;
        confirmText.textContent = actionType === 'delete' ? 'Deleting...' : 'Revoking...';
        onConfirm();
        cleanup();
    };

    // Handle cancel button  
    const handleCancel = () => {
        cleanup();
    };

    // Cleanup function
    const cleanup = () => {
        modal.classList.add('hidden');
        confirmBtn.disabled = false;
        confirmBtn.removeEventListener('click', handleConfirm);
        cancelBtn.removeEventListener('click', handleCancel);
        modal.removeEventListener('click', handleOutsideClick);
        document.removeEventListener('keydown', handleEscape);
    };

    // Handle clicks outside modal
    const handleOutsideClick = (e) => {
        if (e.target === modal) {
            cleanup();
        }
    };

    // Handle Escape key
    const handleEscape = (e) => {
        if (e.key === 'Escape') {
            cleanup();
        }
    };

    // Add event listeners
    confirmBtn.addEventListener('click', handleConfirm);
    cancelBtn.addEventListener('click', handleCancel);
    modal.addEventListener('click', handleOutsideClick);
    document.addEventListener('keydown', handleEscape);
}

// Token action handlers
function deleteToken(tokenId, tokenName) {
    showConfirmationModal(
        'Delete API Token',
        `Are you sure you want to permanently delete this token? Any applications using this token will lose access immediately.`,
        'delete',
        tokenName,
        () => {
            fetch(`/api/users/api-tokens/${tokenId}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showMessage(data.message, true);
                    reloadTokenList();
                } else {
                    showMessage(data.error || 'Failed to delete token', false);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Network error occurred', false);
            });
        }
    );
}

function revokeToken(tokenId, tokenName) {
    showConfirmationModal(
        'Revoke API Token',
        `Are you sure you want to revoke this token? The token will be deactivated but can be reactivated later if needed.`,
        'revoke',
        tokenName,
        () => {
            const formData = new FormData();
            formData.append('token_id', tokenId);
            
            fetch('/api/users/api-tokens/revoke', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showMessage(data.message, true);
                    reloadTokenList();
                } else {
                    showMessage(data.error || 'Failed to revoke token', false);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Network error occurred', false);
            });
        }
    );
}
</script>

{{template "modern-footer" .}}
