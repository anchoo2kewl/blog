{{template "modern-header" .}}

<div class="min-h-screen bg-gray-50 dark:bg-slate-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 dark:text-white">
                        {{if .IsEdit}}Edit Slide{{else}}Create New Slide{{end}}
                    </h1>
                    <p class="text-gray-600 dark:text-gray-400 mt-1">
                        {{if .IsEdit}}Update your reveal.js presentation{{else}}Create a new reveal.js presentation{{end}}
                    </p>
                </div>
                <div class="flex space-x-3">
                    {{if .IsEdit}}
                        <a href="/slides/{{.Slide.Slug}}" target="_blank" class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-slate-800 hover:bg-gray-50 dark:hover:bg-slate-700">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                            </svg>
                            Preview
                        </a>
                    {{end}}
                    <a href="/admin/slides" class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-slate-800 hover:bg-gray-50 dark:hover:bg-slate-700">
                        ‚Üê Back to Slides
                    </a>
                </div>
            </div>
        </div>

        <!-- Form -->
        <form id="slide-form" action="{{if .IsEdit}}/admin/slides/{{.Slide.ID}}{{else}}/admin/slides{{end}}" method="post" class="space-y-8">
            {{csrfField}}
            
            <!-- Basic Info -->
            <div class="bg-white dark:bg-slate-800 shadow rounded-lg">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-slate-700">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white">Basic Information</h3>
                </div>
                <div class="px-6 py-4 space-y-6">
                    <!-- Title -->
                    <div>
                        <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                            Title *
                        </label>
                        <input type="text" id="title" name="title" required
                               value="{{.Slide.Title}}"
                               class="mt-1 block w-full border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 dark:bg-slate-700 dark:text-white sm:text-sm"
                               placeholder="Enter slide title">
                    </div>

                    <!-- Slug -->
                    <div>
                        <label for="slug" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                            Slug
                        </label>
                        <div class="mt-1 flex rounded-md shadow-sm">
                            <span class="inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 dark:border-slate-600 bg-gray-50 dark:bg-slate-600 text-gray-500 dark:text-gray-400 sm:text-sm">
                                /slides/
                            </span>
                            <input type="text" id="slug" name="slug"
                                   value="{{.Slide.Slug}}"
                                   class="flex-1 min-w-0 block w-full px-3 py-2 rounded-none rounded-r-md border-gray-300 dark:border-slate-600 focus:ring-indigo-500 focus:border-indigo-500 dark:bg-slate-700 dark:text-white sm:text-sm"
                                   placeholder="auto-generated-from-title">
                        </div>
                        <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                            Leave empty to auto-generate from title
                        </p>
                    </div>

                    <!-- Categories -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
                            Categories
                        </label>
                        <div class="space-y-2 max-h-32 overflow-y-auto">
                            {{range .Categories}}
                                <label class="inline-flex items-center mr-6">
                                    <input type="checkbox" name="categories" value="{{.ID}}" 
                                           {{range $.Slide.Categories}}{{if eq .ID $.ID}}checked{{end}}{{end}}
                                           class="rounded border-gray-300 dark:border-slate-600 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 dark:bg-slate-700">
                                    <span class="ml-2 text-sm text-gray-700 dark:text-gray-300">{{.Name}}</span>
                                </label>
                            {{end}}
                            {{if not .Categories}}
                                <p class="text-sm text-gray-500 dark:text-gray-400">
                                    No categories available. <a href="/admin/categories" class="text-indigo-600 hover:text-indigo-500">Create some categories</a> first.
                                </p>
                            {{end}}
                        </div>
                    </div>

                    <!-- Publish Status -->
                    <div>
                        <div class="flex items-start">
                            <div class="flex items-center h-5">
                                <input id="is_published" name="is_published" type="checkbox" 
                                       {{if .Slide.IsPublished}}checked{{end}}
                                       class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 dark:border-slate-600 rounded dark:bg-slate-700">
                            </div>
                            <div class="ml-3 text-sm">
                                <label for="is_published" class="font-medium text-gray-700 dark:text-gray-300">
                                    Publish immediately
                                </label>
                                <p class="text-gray-500 dark:text-gray-400">
                                    Make this slide visible to the public
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Content Editor -->
            <div class="bg-white dark:bg-slate-800 shadow rounded-lg">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-slate-700">
                    <div class="flex items-center justify-between">
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white">Slide Content (HTML)</h3>
                        <div class="flex space-x-3">
                            <button type="button" id="preview-btn" class="inline-flex items-center px-3 py-1.5 border border-gray-300 dark:border-gray-600 shadow-sm text-xs font-medium rounded text-gray-700 dark:text-gray-300 bg-white dark:bg-slate-700 hover:bg-gray-50 dark:hover:bg-slate-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                                </svg>
                                Preview
                            </button>
                        </div>
                    </div>
                </div>
                <div class="px-6 py-4">
                    <div class="mb-4">
                        <label for="content" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            Reveal.js HTML Content *
                        </label>
                        <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
                            Enter the HTML content for your reveal.js presentation. Use <code>&lt;section&gt;</code> tags for slides.
                        </p>
                        <textarea id="content" name="content" required rows="20"
                                  class="block w-full border-gray-300 dark:border-slate-600 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 dark:bg-slate-700 dark:text-white sm:text-sm font-mono"
                                  placeholder='<section>
    <h1>Welcome to My Presentation</h1>
    <p>This is the first slide</p>
</section>

<section>
    <h2>Second Slide</h2>
    <p>Add your content here</p>
</section>'>{{.Slide.ContentHTML}}</textarea>
                    </div>

                    <!-- Help Text -->
                    <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md p-4">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <div class="ml-3">
                                <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">
                                    Reveal.js Tips
                                </h3>
                                <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">
                                    <ul class="list-disc list-inside space-y-1">
                                        <li>Each <code>&lt;section&gt;</code> creates a new slide</li>
                                        <li>Use <code>&lt;section&gt;&lt;section&gt;...&lt;/section&gt;&lt;/section&gt;</code> for vertical slides</li>
                                        <li>Add <code>data-background-color="#ff0000"</code> to change slide background</li>
                                        <li>Use <code>class="fragment"</code> for step-by-step reveals</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="flex items-center justify-end space-x-3">
                <a href="/admin/slides" class="bg-white dark:bg-slate-800 py-2 px-4 border border-gray-300 dark:border-slate-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-slate-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    Cancel
                </a>
                <button type="submit" class="bg-indigo-600 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    {{if .IsEdit}}Update Slide{{else}}Create Slide{{end}}
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Preview Modal -->
<div id="preview-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white dark:bg-slate-800">
        <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-medium text-gray-900 dark:text-white">Slide Preview</h3>
            <button id="close-preview" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
            </button>
        </div>
        <div id="preview-content" class="bg-gray-100 dark:bg-slate-700 rounded-lg p-4 max-h-96 overflow-auto">
            <!-- Preview content will be loaded here -->
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Auto-generate slug from title
    const titleInput = document.getElementById('title');
    const slugInput = document.getElementById('slug');
    
    titleInput.addEventListener('input', function() {
        if (!slugInput.dataset.userModified) {
            const slug = this.value.toLowerCase()
                .replace(/[^\w\s-]/g, '')
                .replace(/\s+/g, '-')
                .replace(/-+/g, '-')
                .trim('-');
            slugInput.value = slug;
        }
    });
    
    slugInput.addEventListener('input', function() {
        slugInput.dataset.userModified = 'true';
    });

    // Preview functionality
    const previewBtn = document.getElementById('preview-btn');
    const previewModal = document.getElementById('preview-modal');
    const closePreview = document.getElementById('close-preview');
    const previewContent = document.getElementById('preview-content');

    previewBtn.addEventListener('click', function() {
        const content = document.getElementById('content').value;
        if (!content.trim()) {
            alert('Please enter some content to preview');
            return;
        }

        // Show modal
        previewModal.classList.remove('hidden');
        
        // Load preview content
        previewContent.innerHTML = '<div class="text-center py-8"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto"></div><p class="mt-2 text-sm text-gray-500">Loading preview...</p></div>';
        
        // Send content to preview endpoint
        fetch('/admin/slides/preview', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: 'content=' + encodeURIComponent(content)
        })
        .then(response => response.text())
        .then(html => {
            previewContent.innerHTML = html;
        })
        .catch(error => {
            previewContent.innerHTML = '<div class="text-red-600 dark:text-red-400 text-center py-8">Error loading preview: ' + error.message + '</div>';
        });
    });

    closePreview.addEventListener('click', function() {
        previewModal.classList.add('hidden');
    });

    // Close modal when clicking outside
    previewModal.addEventListener('click', function(e) {
        if (e.target === previewModal) {
            previewModal.classList.add('hidden');
        }
    });

    // Collect selected categories
    const form = document.getElementById('slide-form');
    form.addEventListener('submit', function(e) {
        const checkboxes = document.querySelectorAll('input[name="categories"]:checked');
        const categoryIds = Array.from(checkboxes).map(cb => cb.value);
        
        // Create hidden input for categories
        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'categories';
        hiddenInput.value = categoryIds.join(',');
        form.appendChild(hiddenInput);
    });
});
</script>

{{template "modern-footer" .}}