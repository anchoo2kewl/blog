{{define "modern-base-header"}}
<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="Anshuman Biswas - Software Engineering & Cloud Architecture Blog" />
    <meta name="author" content="Anshuman Biswas" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/static/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="apple-touch-icon" sizes="180x180" href="/static/favicon.svg" />
    <link rel="icon" type="image/png" sizes="32x32" href="/static/favicon.svg" />
    <link rel="icon" type="image/png" sizes="16x16" href="/static/favicon.svg" />
    
    <!-- Styles -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="/static/css/modern-theme.css?v=2025-v3" />
    
    <!-- Dark mode script -->
    <script>
        // Check for saved theme preference or default to system preference
        const savedTheme = localStorage.getItem('theme') || 
                          (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
        
        if (savedTheme === 'dark') {
            document.documentElement.classList.add('dark');
        }
    </script>
    
    <title>Blog - Anshuman Biswas</title>
</head>
<body class="bg-white dark:bg-gray-950 text-gray-900 dark:text-gray-100 antialiased">
    <!-- Navigation -->
    <nav class="navbar">
        <div class="nav-container">
            <!-- Logo -->
            <a href="/" class="logo-container">
                <img src="/static/logo.svg" alt="Biswas Blog Logo" class="logo-icon logo-pulse" />
                <span class="logo-text">
                    Anshuman <span class="highlight">B</span>iswas
                </span>
            </a>
            
            <!-- Desktop Navigation -->
            <ul class="nav-links">
                <li><a href="/" class="nav-link ">Home</a></li>
                <li><a href="/slides" class="nav-link ">Slides</a></li>
                <li><a href="/about" class="nav-link ">About</a></li>
                {{if .LoggedIn}}
                    {{if .IsAdmin}}
                        <li class="relative admin-dropdown">
                            <button class="nav-link admin-dropdown-btn " aria-label="Admin menu">
                                <span>Admin</span>
                                <svg class="w-4 h-4 ml-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                </svg>
                            </button>
                            <div class="admin-dropdown-menu">
                                <div>
                                    <a href="/admin/posts" class="dropdown-item">
                                        <span class="flex items-center gap-2">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-1m-10 4h8m-8 2h8m-8 2h8"/></svg>
                                            <span>Posts</span>
                                        </span>
                                    </a>
                                    <a href="/admin/posts/new" class="dropdown-item">
                                        <span class="flex items-center gap-2">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/></svg>
                                            <span>New Post</span>
                                        </span>
                                    </a>
                                </div>
                                <div class="h-px bg-gray-200 dark:bg-gray-700 my-2"></div>
                                <div>
                                    <a href="/admin/slides" class="dropdown-item">
                                        <span class="flex items-center gap-2">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2h2a2 2 0 002-2z"/></svg>
                                            <span>Slides</span>
                                        </span>
                                    </a>
                                    <a href="/admin/slides/new" class="dropdown-item">
                                        <span class="flex items-center gap-2">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/></svg>
                                            <span>New Slide</span>
                                        </span>
                                    </a>
                                </div>
                                <div class="h-px bg-gray-200 dark:bg-gray-700 my-2"></div>
                                <div>
                                    <a href="/admin/categories" class="dropdown-item">
                                        <span class="flex items-center gap-2">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"/></svg>
                                            <span>Categories</span>
                                        </span>
                                    </a>
                                    <a href="/admin/formatting-guide" class="dropdown-item">
                                        <span class="flex items-center gap-2">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16h8M8 12h8M8 8h8M4 6h16v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6z"/></svg>
                                            <span>Formatting Guide</span>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </li>
                    {{end}}
                    <li class="relative user-dropdown">
                        <button class="nav-link user-dropdown-btn" aria-label="User menu">
                            <span class="avatar-circle">{{initial .Username}}</span>
                            <span class="username-text">{{.Username}}</span>
                            <svg class="w-4 h-4 ml-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div class="user-dropdown-menu">
                            <div>
                                <a href="/users/me" class="dropdown-item">
                                    <span class="flex items-center gap-2">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/></svg>
                                        <span>Profile</span>
                                    </span>
                                </a>
                                <a href="/my-posts" class="dropdown-item">
                                    <span class="flex items-center gap-2">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2m14 0V7a2 2 0 00-2-2H5a2 2 0 00-2 2v4"/></svg>
                                        <span>My Posts</span>
                                    </span>
                                </a>
                                <a href="/api-access" class="dropdown-item">
                                    <span class="flex items-center gap-2">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 11c0-1.1.9-2 2-2h6m-8 7h6m-6-4h6M7 7h.01M7 12h.01M7 17h.01M3 5h14a2 2 0 012 2v10a2 2 0 01-2 2H3V5z"/></svg>
                                        <span>API Access</span>
                                    </span>
                                </a>
                            </div>
                            <div class="h-px bg-gray-200 dark:bg-gray-700 my-2"></div>
                            <div>
                                <a href="/docs/formatting-guide" class="dropdown-item">
                                    <span class="flex items-center gap-2">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16h8M8 12h8M8 8h8M4 6h16v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6z"/></svg>
                                        <span>Formatting Guide</span>
                                    </span>
                                </a>
                                <a href="/admin/categories" class="dropdown-item">
                                    <span class="flex items-center gap-2">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"/></svg>
                                        <span>Categories</span>
                                    </span>
                                </a>
                            </div>
                        </div>
                    </li>
                {{else}}
                    <li><a href="/signin" class="nav-link ">Sign In</a></li>
                    {{if not .SignupDisabled}}
                        <li><a href="/signup" class="nav-link ">Sign Up</a></li>
                    {{end}}
                {{end}}
                
                <!-- Theme Toggle -->
                <li>
                    <button id="theme-toggle" class="nav-link" aria-label="Toggle theme">
                        <svg id="sun-icon" class="w-5 h-5 hidden dark:block" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
                        </svg>
                        <svg id="moon-icon" class="w-5 h-5 block dark:hidden" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                        </svg>
                    </button>
                </li>
                
                <!-- Search -->
                <li>
                    <button id="search-toggle" class="nav-link" aria-label="Search">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </button>
                </li>
            </ul>
            
            <!-- Mobile Menu Button -->
            <button class="mobile-menu-button" id="mobile-menu-btn" aria-label="Toggle menu">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
            
            <!-- Mobile Menu -->
            <div class="mobile-menu" id="mobile-menu">
                <ul class="mobile-nav-links">
                    <li><a href="/" class="nav-link ">Home</a></li>
                    <li><a href="/slides" class="nav-link ">Slides</a></li>
                    <li><a href="/about" class="nav-link ">About</a></li>
                    {{if .LoggedIn}}
                        <li><a href="/my-posts" class="nav-link ">My Posts</a></li>
                        <li><a href="/users/me" class="nav-link">Profile ({{.Username}})</a></li>
                        {{if .IsAdmin}}
                            <li><a href="/admin/posts" class="nav-link ">Posts</a></li>
                            <li><a href="/admin/posts/new" class="nav-link">New Post</a></li>
                            <li><a href="/admin/slides" class="nav-link">Slides</a></li>
                            <li><a href="/admin/slides/new" class="nav-link">New Slide</a></li>
                            <li><a href="/admin/categories" class="nav-link">Categories</a></li>
                            <li><a href="/admin/formatting-guide" class="nav-link">Formatting Guide</a></li>
                        {{end}}
                        <li><a href="/logout" class="nav-link">Sign Out</a></li>
                    {{else}}
                        <li><a href="/signin" class="nav-link ">Sign In</a></li>
                        {{if not .SignupDisabled}}
                            <li><a href="/signup" class="nav-link ">Sign Up</a></li>
                        {{end}}
                    {{end}}
                </ul>
            </div>
        </div>
    </nav>
    
    <!-- JavaScript for dropdown functionality -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Theme toggle
            const themeToggle = document.getElementById('theme-toggle');
            const html = document.documentElement;
            
            themeToggle.addEventListener('click', () => {
                if (html.classList.contains('dark')) {
                    html.classList.remove('dark');
                    localStorage.setItem('theme', 'light');
                } else {
                    html.classList.add('dark');
                    localStorage.setItem('theme', 'dark');
                }
            });
            
            // Mobile menu toggle
            const mobileMenuBtn = document.getElementById('mobile-menu-btn');
            const mobileMenu = document.getElementById('mobile-menu');
            
            mobileMenuBtn.addEventListener('click', () => {
                mobileMenu.classList.toggle('open');
            });
            
            // Close mobile menu when clicking outside
            document.addEventListener('click', (e) => {
                if (!mobileMenuBtn.contains(e.target) && !mobileMenu.contains(e.target)) {
                    mobileMenu.classList.remove('open');
                }
            });
            
            // Admin dropdown toggle
            const adminDropdown = document.querySelector('.admin-dropdown');
            const adminDropdownBtn = document.querySelector('.admin-dropdown-btn');
            
            if (adminDropdownBtn && adminDropdown) {
                const openMenu = () => adminDropdown.classList.add('open');
                const closeMenu = () => adminDropdown.classList.remove('open');
                
                adminDropdownBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    if (adminDropdown.classList.contains('open')) {
                        closeMenu();
                    } else {
                        openMenu();
                    }
                });
                
                document.addEventListener('click', (e) => {
                    if (!adminDropdown.contains(e.target)) {
                        closeMenu();
                    }
                });
            }
            
            // User dropdown toggle
            const userDropdown = document.querySelector('.user-dropdown');
            const userDropdownBtn = document.querySelector('.user-dropdown-btn');
            
            if (userDropdownBtn && userDropdown) {
                const openMenu = () => userDropdown.classList.add('open');
                const closeMenu = () => userDropdown.classList.remove('open');
                
                userDropdownBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    if (userDropdown.classList.contains('open')) {
                        closeMenu();
                    } else {
                        openMenu();
                    }
                });
                
                document.addEventListener('click', (e) => {
                    if (!userDropdown.contains(e.target)) {
                        closeMenu();
                    }
                });
            }
        });
    </script>
    
    <!-- Main Content -->
    <main class="main-container">
{{end}}

{{define "modern-base-footer"}}
    </main>
    
    <!-- Footer -->
    <footer class="footer">
        <div class="footer-content">
            <div class="footer-links">
                <a href="https://biswas.me" class="footer-link">Website</a>
                <a href="mailto:anshuman@biswas.me" class="footer-link">Contact</a>
                <a href="https://github.com/anchoo2kewl" target="_blank" rel="noopener noreferrer" class="footer-link">GitHub</a>
                <a href="https://linkedin.com/in/anshuman-biswas-phd-613b0145" target="_blank" rel="noopener noreferrer" class="footer-link">LinkedIn</a>
                <a href="/rss" class="footer-link">RSS</a>
            </div>
            <p class="footer-text">
                © <span id="current-year"></span> Anshuman Biswas • Built with Go & ❤️
            </p>
        </div>
    </footer>
    
    <!-- Scripts -->
    <script>
        // Update year
        document.getElementById('current-year').textContent = new Date().getFullYear();
        
        // Theme toggle
        const themeToggle = document.getElementById('theme-toggle');
        const html = document.documentElement;
        
        themeToggle.addEventListener('click', () => {
            if (html.classList.contains('dark')) {
                html.classList.remove('dark');
                localStorage.setItem('theme', 'light');
            } else {
                html.classList.add('dark');
                localStorage.setItem('theme', 'dark');
            }
        });
        
        // Mobile menu toggle
        const mobileMenuBtn = document.getElementById('mobile-menu-btn');
        const mobileMenu = document.getElementById('mobile-menu');
        
        mobileMenuBtn.addEventListener('click', () => {
            mobileMenu.classList.toggle('open');
        });
        
        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
            if (!mobileMenuBtn.contains(e.target) && !mobileMenu.contains(e.target)) {
                mobileMenu.classList.remove('open');
            }
        });
        
        // Search toggle (placeholder - can be enhanced)
        document.getElementById('search-toggle').addEventListener('click', () => {
            // Implement search functionality
            console.log('Search clicked');
        });
        
        // Add fade-in animation to content
        document.addEventListener('DOMContentLoaded', () => {
            const content = document.querySelector('.main-container');
            if (content) {
                content.classList.add('fade-in');
            }
            
            // Convert dates to relative time
            convertToRelativeTime();
            
            // Calculate reading times
            calculateReadingTimes();
        });
        
        // Function to convert ISO dates to relative time
        function convertToRelativeTime() {
            const timeElements = document.querySelectorAll('.relative-time');
            timeElements.forEach(element => {
                const isoDate = element.getAttribute('datetime');
                if (isoDate) {
                    const relativeTime = getRelativeTime(new Date(isoDate));
                    element.textContent = relativeTime;
                }
            });
        }
        
        // Function to get relative time string
        function getRelativeTime(date) {
            const now = new Date();
            const diffInSeconds = Math.floor((now - date) / 1000);
            
            if (diffInSeconds < 60) {
                return 'just now';
            } else if (diffInSeconds < 3600) {
                const minutes = Math.floor(diffInSeconds / 60);
                return `${minutes} ${minutes === 1 ? 'minute' : 'minutes'} ago`;
            } else if (diffInSeconds < 86400) {
                const hours = Math.floor(diffInSeconds / 3600);
                return `${hours} ${hours === 1 ? 'hour' : 'hours'} ago`;
            } else if (diffInSeconds < 2592000) {
                const days = Math.floor(diffInSeconds / 86400);
                return `${days} ${days === 1 ? 'day' : 'days'} ago`;
            } else if (diffInSeconds < 31536000) {
                const months = Math.floor(diffInSeconds / 2592000);
                return `${months} ${months === 1 ? 'month' : 'months'} ago`;
            } else {
                const years = Math.floor(diffInSeconds / 31536000);
                return `${years} ${years === 1 ? 'year' : 'years'} ago`;
            }
        }
        
        // Function to calculate reading times
        function calculateReadingTimes() {
            const readTimeElements = document.querySelectorAll('.read-time');
            readTimeElements.forEach(element => {
                const content = element.getAttribute('data-content');
                if (content) {
                    const readingTime = calculateReadingTime(content);
                    element.textContent = readingTime;
                }
            });
        }
        
        // Function to calculate reading time based on content
        function calculateReadingTime(content) {
            // Remove HTML tags and count words
            const plainText = content.replace(/<[^>]*>/g, '');
            const wordCount = plainText.trim().split(/\s+/).length;
            
            // Average reading speed is 200-250 words per minute
            // Using 200 for conservative estimate
            const wordsPerMinute = 200;
            const minutes = Math.ceil(wordCount / wordsPerMinute);
            
            return `${minutes} min read`;
        }
    </script>
</body>
</html>
{{end}}
